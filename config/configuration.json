{
  "nodes": {
    "root": {
      "open_bci": {
        "module": "models.node.generator",
        "type": "OpenBCIBoard",
        "log_level": "TRACE",
        "board": "SYNTHETIC_BOARD",
        "communication": {
          "serial_port": "COM4"
        },
        "buffer_options": {
          "clear_output_buffer_on_generate": true
        },
        "outputs": {
          "eeg": [
            {
              "node": "merge",
              "input": "master_main"
            }
          ],
          "accelerometer": [],
          "timestamp": [
            {
              "node": "merge",
              "input": "master_timestamp"
            }
          ]
        }
      },
      "motor_imagery_session": {
        "module": "models.node.generator",
        "type": "MotorImagery",
        "buffer_options": {
          "clear_output_buffer_on_generate": true
        },
        "shuffle_when_sequence_is_finished": true,
        "trials": [
          {
            "name": "Rest",
            "code": 1,
            "duration": {
              "mean": 0.5,
              "standard_deviation": 1,
              "maximum": 1,
              "minimum": 0.2
            },
            "cue": {
              "file": "cues\\console_print.py",
              "parameters": {
                "message": "REST"
              }
            }
          },
          {
            "name": "Close right fist",
            "code": 3,
            "duration": {
              "mean": 0.5,
              "standard_deviation": 1,
              "maximum": 1,
              "minimum": 0.2
            },
            "cue": {
              "file": "cues\\console_print.py",
              "parameters": {
                "message": "CLOSE RIGHT FIST"
              }
            }
          },
          {
            "name": "Rest",
            "code": 1,
            "duration": {
              "mean": 0.5,
              "standard_deviation": 1,
              "maximum": 1,
              "minimum": 0.2
            },
            "cue": {
              "file": "cues\\console_print.py",
              "parameters": {
                "message": "REST"
              }
            }
          },
          {
            "name": "Close left fist",
            "code": 2,
            "duration": {
              "mean": 0.5,
              "standard_deviation": 1,
              "maximum": 1,
              "minimum": 0.2
            },
            "cue": {
              "file": "cues\\console_print.py",
              "parameters": {
                "message": "CLOSE LEFT FIST"
              }
            }
          }
        ],
        "outputs": {
          "marker": [
            {
              "node": "rename",
              "input": "main"
            }
          ],
          "timestamp": [
            {
              "node": "merge",
              "input": "slave_timestamp"
            }
          ]
        }
      }
    },
    "common": {
      "rename": {
        "module": "models.node.processing",
        "type": "ChannelRename",
        "dictionary": {
          "main": "marker"
        },
        "buffer_options": {
          "clear_output_buffer_on_data_input": true,
          "clear_input_buffer_after_process": true,
          "clear_output_buffer_after_process": true
        },
        "outputs": {
          "main": [
            {
              "node": "merge",
              "input": "slave_main"
            }
          ]
        }
      },
      "merge": {
        "module": "models.node.processing",
        "type": "Merge",
        "slave_filling": "sample_and_hold",
        "buffer_options": {
          "clear_output_buffer_on_data_input": true,
          "clear_input_buffer_after_process": true,
          "clear_output_buffer_after_process": true
        },
        "outputs": {
          "merged_main": [
            {
              "node": "segmenter",
              "input": "main"
            }
          ],
          "merged_timestamp": []
        }
      },
      "segmenter": {
        "module": "models.node.processing.segmenter",
        "type": "FixedWindowSegmenter",
        "window_size": 1000,
        "filling_value": "latest",
        "buffer_options": {
          "clear_output_buffer_on_data_input": true,
          "clear_input_buffer_after_process": false,
          "clear_output_buffer_after_process": true
        },
        "outputs": {
          "main": [
            {
              "node": "split",
              "input": "main"
            }
          ]
        }
      },
      "split": {
        "module": "models.node.processing",
        "type": "Split",
        "split": {
          "data": [
            "Fz"
          ],
          "label": [
            "marker"
          ]
        },
        "buffer_options": {
          "clear_output_buffer_on_data_input": true,
          "clear_input_buffer_after_process": true,
          "clear_output_buffer_after_process": true
        },
        "outputs": {
          "data": [
            {
              "node": "csp",
              "input": "data"
            }
          ],
          "label": [
            {
              "node": "csp",
              "input": "label"
            }
          ]
        }
      },
      "csp": {
        "module": "models.node.processing.trainable.feature_extractor",
        "type": "CSP",
        "number_of_components": 4,
        "training_set_size": 5,
        "save_after_training": true,
        "save_file_path": "D:\\Desktop\\A\\csp",
        "load_trained": false,
        "enable_log": true,
        "buffer_options": {
          "print_buffer_size": true,
          "clear_output_buffer_on_data_input": true,
          "clear_input_buffer_after_process": true,
          "clear_output_buffer_after_process": true,
          "clear_input_buffer_after_training": true,
          "process_input_buffer_after_training": true
        },
        "outputs": {
          "main": [
            {
              "node": "lda",
              "input": "data"
            }
          ]
        }
      },
      "lda": {
        "module": "models.node.processing.trainable.classifier",
        "type": "LDA",
        "training_set_size": 25,
        "save_after_training": false,
        "load_trained": false,
        "buffer_options": {
          "print_buffer_size": true,
          "clear_output_buffer_on_data_input": true,
          "clear_input_buffer_after_process": true,
          "clear_output_buffer_after_process": true,
          "clear_input_buffer_after_training": true,
          "process_input_buffer_after_training": true
        },
        "outputs": {
          "main": []
        }
      }
    }
  }
}